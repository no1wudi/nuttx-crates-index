# Copyright (c) 2025 Xiaomi Corporation
# SPDX-License-Identifier: Apache-2.0

name: Build

# Working directory layout after checkout:
# .
# ├── nuttx-crates-index/ (this repository)
# ├── nuttx/              (NuttX repository)
# ├── nuttx-apps/         (NuttX Apps repository)
# │   └── external/       (symbolic link to nuttx-crates-index)
# └── build/              (build directory)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board:
          - sabre-6quad:nsh

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: nuttx-crates-index

      - name: Checkout NuttX repository
        uses: actions/checkout@v4
        with:
          repository: apache/nuttx
          path: nuttx
          ref: e15f7b13c7ed16934d10018ac7f868df936797d3

      - name: Checkout NuttX Apps repository
        uses: actions/checkout@v4
        with:
          repository: apache/nuttx-apps
          path: nuttx-apps
          ref: 3b03636e95f6202b512d8af32629da4c0dc4af2c

      - name: Create symbolic link to external directory
        run: |
          cd nuttx-apps
          rm -rf external
          ln -sf ../nuttx-crates-index external

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y kconfig-frontends-nox gcc-arm-none-eabi qemu-system-arm cmake python-is-python3
          pip install kconfiglib --break-system-packages
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2025-03-07
          components: rustfmt,clippy,rust-src
          cache: false
          override: true

      - name: Patch Rust core library
        run: |
          RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/library/std/src/sys/pal/unix/fs.rs"
          echo "Patching file: $RUST_SRC_PATH"
          sed -i 's/unsafe { CStr::from_ptr(self\.entry\.d_name\.as_ptr()) }/unsafe { CStr::from_ptr(self.entry.d_name.as_ptr() as *const u8) }/g' "$RUST_SRC_PATH"
          echo "Patch applied successfully"

      - name: Build NuttX
        run: |
          rm -rf build
          cmake -Bbuild -DBOARD_CONFIG=${{ matrix.board }} nuttx

          # Enable additional configuration options
          cd build
          kconfig-tweak --enable CONFIG_SYSTEM_TIME64
          kconfig-tweak --enable CONFIG_FS_LARGEFILE
          kconfig-tweak --enable CONFIG_DEV_URANDOM
          kconfig-tweak --set-val CONFIG_TLS_NELEM 16
          cd ..

          make -C build -j$(nproc) && size -A build/nuttx

      - name: Build NuttX with Regex
        run: |
          rm -rf build
          cmake -Bbuild -DBOARD_CONFIG=${{ matrix.board }} nuttx

          # Enable additional configuration options
          cd build
          kconfig-tweak --enable CONFIG_SYSTEM_TIME64
          kconfig-tweak --enable CONFIG_FS_LARGEFILE
          kconfig-tweak --enable CONFIG_DEV_URANDOM
          kconfig-tweak --set-val CONFIG_TLS_NELEM 16
          kconfig-tweak --enable CONFIG_RUST_CRATES_REGEX
          cd ..

          make -C build -j$(nproc) && size -A build/nuttx
