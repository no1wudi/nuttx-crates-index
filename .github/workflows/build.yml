# Copyright (c) 2025 Xiaomi Corporation
# SPDX-License-Identifier: Apache-2.0

name: Build

# Working directory layout after checkout:
# .
# ├── nuttx-crates-index/ (this repository)
# ├── nuttx/              (NuttX repository)
# ├── nuttx-apps/         (NuttX Apps repository)
# │   └── external/       (symbolic link to nuttx-crates-index)
# ├── output/             (Artifact directory)
# └── build/              (build directory)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  check:
    uses: ./.github/workflows/check.yml

  build:
    needs: check
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/apache/nuttx/apache-nuttx-ci-linux:latest
    strategy:
      matrix:
        target:
          - { board: "sabre-6quad:nsh", arch: thumbv7a-cortex-a9 }
          - { board: "nucleo-h743zi:nsh", arch: thumbv7em-cortex-m7 }
          - { board: "stm32f4discovery:nsh", arch: thumbv7em-cortex-m4 }
          - { board: "mps2-an521:nsh", arch: thumbv8m.main-cortex-m33 }
          - { board: "rv-virt:nsh", arch: riscv32imac }
          - { board: "rv-virt:nsh64", arch: riscv64imac }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: nuttx-crates-index

      - name: Checkout NuttX repository
        uses: actions/checkout@v4
        with:
          repository: no1wudi/nuttx
          path: nuttx
          ref: crate

      - name: Checkout NuttX Apps repository
        uses: actions/checkout@v4
        with:
          repository: apache/nuttx-apps
          path: nuttx-apps
          ref: 3b03636e95f6202b512d8af32629da4c0dc4af2c

      - name: Create symbolic link to external directory
        run: |
          cd nuttx-apps
          rm -rf external
          ln -sf ../nuttx-crates-index external

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly-2025-03-14
          components: rustfmt,clippy,rust-src
          cache: false
          override: true

      - name: Create output directory
        run: mkdir -p output

      - name: Build NuttX
        run: |
          python3 nuttx-crates-index/tools/build.py ${{ matrix.target.board }} --json output/${{ matrix.target.arch }}.json --run

      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ matrix.target.arch }}
          path: output/${{ matrix.target.arch }}.json

  publish:
    needs: build
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/publish.yml
